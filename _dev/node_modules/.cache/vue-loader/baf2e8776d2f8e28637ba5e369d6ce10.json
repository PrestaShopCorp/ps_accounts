{"remainingRequest":"/home/david/Workspace/PrestaShop/ps_accounts/_dev/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/Workspace/PrestaShop/ps_accounts/_dev/src/components/PsAccount.vue?vue&type=style&index=0&id=4be4ae18&scoped=true&lang=css&","dependencies":[{"path":"/home/david/Workspace/PrestaShop/ps_accounts/_dev/src/components/PsAccount.vue","mtime":1581094375456},{"path":"/home/david/Workspace/PrestaShop/ps_accounts/_dev/node_modules/css-loader/dist/cjs.js","mtime":1580829596358},{"path":"/home/david/Workspace/PrestaShop/ps_accounts/_dev/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1580829601153},{"path":"/home/david/Workspace/PrestaShop/ps_accounts/_dev/node_modules/postcss-loader/src/index.js","mtime":1580829596932},{"path":"/home/david/Workspace/PrestaShop/ps_accounts/_dev/node_modules/cache-loader/dist/cjs.js","mtime":1580829599339},{"path":"/home/david/Workspace/PrestaShop/ps_accounts/_dev/node_modules/vue-loader/lib/index.js","mtime":1580829601153}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpoMyB7CiAgbWFyZ2luOiA0MHB4IDAgMDsKfQp1bCB7CiAgbGlzdC1zdHlsZS10eXBlOiBub25lOwogIHBhZGRpbmc6IDA7Cn0KbGkgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBtYXJnaW46IDAgMTBweDsKfQphIHsKICBjb2xvcjogIzQyYjk4MzsKfQo="},{"version":3,"sources":["PsAccount.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PsAccount.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div v-if=\"params_loaded\" class=\"ps_account text-center\">\n      <button @click.stop.prevent=\"connectSvcUi()\" class=\"btn btn-primary\">\n        {{ buttonText }}\n      </button>\n    </div>\n    <div v-else class=\"forbidden text-center\">\n      Restart onboarding\n    </div>\n  </div>\n</template>\n<script>\n/* eslint-disable no-console */\nexport default {\n  name: 'PsAccount',\n  props: {\n    buttonText: String,\n    vue_app_svc_ui_url: String,\n  },\n  data() {\n    return {\n      svc_ui_url: null,\n      params_loaded: false,\n      queryParams: {\n        pubKey: null,\n        name: null,\n        bo: null,\n        next: null,\n      },\n    }\n  },\n  mounted() {\n    this.getSvcUiUrl(\n      process.env.VUE_APP_SSO_URL,\n      window.protocolDomainToValidate,\n      window.domainNameDomainToValidate,\n      window.location.protocol.slice(0, -1),\n      window.location.host,\n      window.queryParams,\n      window.pubKey,\n      window.shopName,\n      '2'\n    )\n  },\n\n  methods: {\n    connectSvcUi() {\n      window.location.replace(this.svc_ui_url)\n    },\n    getSvcUiUrl(\n      sso_url,\n      protocolDomainToValidate,\n      domainNameDomainToValidate,\n      protocolBo,\n      domainNameBo,\n      queryParams,\n      pubKey,\n      shopName,\n      nextStep\n    ) {\n      this.svc_ui_url =\n        sso_url +\n        '/link-shop/' +\n        protocolDomainToValidate +\n        '/' +\n        domainNameDomainToValidate +\n        '/' +\n        protocolBo +\n        '/' +\n        domainNameBo +\n        '/PSXEmoji.Deluxe.Fake.Service'\n\n      let boPath = ''\n      for (let [key, value] of Object.entries(queryParams)) {\n        boPath += key + '=' + value + '&'\n      }\nconsole.log('ddddddddd')\n      this.queryParams.bo =\n        'string' === typeof boPath\n          ? encodeURIComponent(boPath.slice(0, -1))\n          : null\n      this.queryParams.pubKey =\n        'string' === typeof pubKey ? encodeURIComponent(pubKey) : null\n      this.queryParams.name =\n        'string' === typeof window.shopName\n          ? encodeURIComponent(window.shopName)\n          : null\n      this.queryParams.next =\n        'string' === typeof nextStep ? encodeURIComponent(nextStep) : null\n      this.queryParamsLoaded()\n\n      return this.svc_ui_url\n    },\n\n    queryParamsLoaded() {\n      const countInitQueryParams = Object.keys(this.queryParams).length\n      let counterValideParams = 0\n      this.svc_ui_url += '?'\n      for (let [key, value] of Object.entries(this.queryParams)) {\n        if (null !== value) {\n          counterValideParams++\n          this.svc_ui_url += `${key}=${value}&`\n        }\n      }\n\n      if (countInitQueryParams === counterValideParams) {\n        this.params_loaded = true\n        this.svc_ui_url = this.svc_ui_url.slice(0, -1)\n      }\n    },\n  },\n}\n</script>\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}