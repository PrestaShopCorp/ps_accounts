name: Release and publish

on:
  release:
    types: [released, prereleased]

env:
  NODE_VERSION: 20
  PNPM_VERSION: 9

jobs:
  build:
    name: Build the base artifact
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: Setup node env 🏗
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: "https://registry.npmjs.org"
          scope: "@prestashopcorp"
          cache: "pnpm"

      - name: Install pnpm 🏗
        run: npm install -g pnpm@${{ env.PNPM_VERSION }}

      - name: Set version
        id: set_version
        run: |
          echo "version=$(echo "${{ github.event.release.tag_name }}" | sed 's/^v//' | cut -d'-' -f1)" >> "$GITHUB_OUTPUT"

      - name: Bump version
        run: |
          VERSION=${{ steps.set_version.outputs.version }} \
          make version

      #      - name: Install composer dependencies
      #        run: composer install --no-dev -o

      - name: Scoped dependencies
        run: make php-scoper

      - name: Install _dev dependencies
        working-directory: ./_dev
        run: pnpm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN_RO }}

      - name: Build apps
        working-directory: ./_dev
        run: pnpm build

      - name: Create & upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}
          path: ${{ github.workspace }}
          include-hidden-files: true

  upload_release_asset_production:
    name: Upload the production zip asset to the release
    runs-on: ubuntu-latest
    needs: build
    outputs:
      zip_file: ${{ steps.set_zip_file.outputs.zip_file }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.repository.name }}
          path: ${{ github.workspace }}

      - name: Make the zip for production
        run: make zip:prod

      - name: Publish the production zip
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ github.workspace }}/dist/${{ env.zip_file }}
          asset_name: ${{ env.zip_file }}
          asset_content_type: application/zip

  upload_release_asset_preprod:
    name: Upload the preprod zip asset to the release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.repository.name }}
          path: ${{ github.workspace }}

      - name: Make the zip for pre-production
        run: make zip:preprod

      - name: Publish the preprod zip
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ github.workspace }}/dist/${{ env.zip_file }}
          asset_name: ${{ env.zip_file }}
          asset_content_type: application/zip

  publish_to_marketplace:
    name: Publish the module to the addons marketplace
    runs-on: ubuntu-latest
    needs: upload_release_asset_production
    if: "!github.event.release.prerelease"
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: Download release asset
        uses: dsaltares/fetch-gh-release-asset@0.06
        with:
          repo: ${{ github.event.repository.full_name }}
          version: ${{ github.event.release.id }}
          file: ${{ needs.upload_release_asset_production.outputs.zip_file }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare publishing tool
        run: |
          composer global require prestashop/publish-on-marketplace

      - name: Release zip
        run: |
          ~/.composer/vendor/bin/publish-on-marketplace \
            --archive=$PWD/${{ needs.upload_release_asset_production.outputs.zip_file }} \
            --metadata-json=$PWD/.github/mktp-metadata.json \
            --changelog="${{ github.event.release.body }}" \
            --debug
        env:
          MARKETPLACE_API_KEY: ${{ secrets.MARKETPLACE_API_KEY }}
