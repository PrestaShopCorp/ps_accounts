name: Module accounts CD

on: [push]
#on:
#  pull_request:
#    types: [opened,edited,reopened,synchronize,labeled]

env:
  MODULE_NAME: ps_accounts
  GCLOUD_TOKEN_PATH: ./token.json

jobs:
  build:
    name: Build ps_accounts and ps_checkout
    runs-on: ubuntu-latest
#    timeout-minutes: 10
#    if: contains(github.event.pull_request.labels.*.name, 'quality assurance needed')

    steps:

      # Fixed babel build : https://github.com/ember-cli/ember-cli/issues/9235#issuecomment-635254959
      - name: Use Node.js 12.16.3
        uses: actions/setup-node@v1
        with:
          node-version: 12.16.3

      - name: Gcloud auth and write env file
        run: |
          echo $GOOGLE_APPLICATION_CREDENTIALS > $GCLOUD_TOKEN_PATH
          gcloud auth activate-service-account --key-file=$GCLOUD_TOKEN_PATH
          gcloud container clusters get-credentials $GCLOUD_CLUSTER \
          --zone europe-west1-c --project $GCLOUD_PROJECT
          gcloud beta secrets versions access latest --project=$GCLOUD_PROJECT --secret="accounts-module" > .env
          rm $GCLOUD_TOKEN_PATH
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCLOUD_CREDENTIAL_INTEGRATION }}
          GCLOUD_TOKEN_PATH: ${{ env.GCLOUD_TOKEN_PATH }}
          GCLOUD_CLUSTER: ${{ secrets.GCLOUD_CLUSTER }}
          GCLOUD_PROJECT: ${{ secrets.GCLOUD_PROJECT_INTEGRATION }}

      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          path: ps_accounts

      - name: Checkout ps checkout
        uses: actions/checkout@v2
        with:
          repository: PrestaShopCorp/ps_checkout
          token: ${{ secrets.ACCESS_TOKEN }}
          path: ps_checkout

      - name: Build ps accounts
        working-directory: ps_accounts
        run: |
          yarn --cwd _dev/ install
          yarn --cwd _dev/ build
          composer install

      - name: Build ps checkout
        working-directory: ps_checkout
        run: |
          yarn --cwd _dev/ install
          yarn --cwd _dev/ build
          composer install

      - name: Copy module
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST_INTEGRATION }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "."
          target: build

  install_accounts_17:
    name: Install ps_accounts
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Move module
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_INTEGRATION }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo su -c 'mv build/ps_accounts ${{ secrets.MULTISHOP_17_PATH }}'
            sudo su -c 'chown -R www-data:www-data ${{ secrets.MULTISHOP_17_PATH }}/ps_accounts'


  install_checkout_17:
    name: Install ps_accounts
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Move module
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_INTEGRATION }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo su -c 'mv build/ps_checkout ${{ secrets.MULTISHOP_17_PATH }}'
            sudo su -c 'chown -R www-data:www-data ${{ secrets.MULTISHOP_17_PATH }}/ps_checkout'

  clean:
    name: Clean
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs:
      - install_checkout_17
      - install_accounts_17
    steps:
      - name: Delete tmp module
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_INTEGRATION }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: rm -rf build

