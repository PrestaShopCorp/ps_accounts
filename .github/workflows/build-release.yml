name: Build & Release draft
on: [push, pull_request, release]

jobs:
  build:
    name: build dependencies & create artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: Install composer dependencies
        run: composer install --no-dev -o

      - name: Clean-up project
        uses: PrestaShopCorp/github-action-clean-before-deploy@v1.0

      - name: Create & upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ github.event.repository.name }}
          path: ../

  update_release_production:
    name: update release production zip
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.event.ref == 'refs/heads/v*'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: ${{ github.event.repository.name }}

      - name: Prepare the production zip
        run: |
          cd ${{ github.event.repository.name }}
          echo "$PS_ACCOUNTS_ENV_PROD" > ${{ github.event.repository.name }}/.env
          zip -r ${{ github.event.repository.name }}.zip ${{ github.event.repository.name }}

      - name: Publish the production zip
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_info.outputs.upload_url }}
          asset_path: ./${{ github.event.repository.name }}/${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}.zip
          asset_content_type: application/zip

  update_release_integration:
    name: update release integration zip
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.event.ref == 'refs/heads/v*'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: ${{ github.event.repository.name }}

      - name: Prepare the integration zip
        run: |
          cd ${{ github.event.repository.name }}
          echo "$PS_ACCOUNTS_ENV_INTE" > ${{ github.event.repository.name }}/.env
          zip -r ${{ github.event.repository.name }}_integration.zip ${{ github.event.repository.name }}

      - name: Publish the integration zip
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_info.outputs.upload_url }}
          asset_path: ./${{ github.event.repository.name }}/${{ github.event.repository.name }}_integration.zip
          asset_name: ${{ github.event.repository.name }}_integration.zip
          asset_content_type: application/zip
