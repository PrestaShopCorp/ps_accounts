name: Accounts Quality Control PHP

on: [pull_request]

jobs:
  php-linter:
    name: PHP Syntax check 7.2|7.3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: PHP syntax checker 7.2
        uses: prestashop/github-action-php-lint/7.2@master
      - name: PHP syntax checker 7.3
        uses: prestashop/github-action-php-lint/7.3@master

  php-cs-fixer:
    name: PHP-CS-FIXER
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: Run PHP-CS-Fixer
        uses: prestashopcorp/github-action-php-cs-fixer@master

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        presta-versions: ["latest"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: Cache vendor folder
        uses: actions/cache@v1
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}

      - name: Cache composer folder
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: php-composer-cache

      - name: Install dependencies
        run: composer install

      - name: Select .neon file compatible with PrestaShop ${{ matrix.presta-versions }}
        id: neon
        run: |
          PS_VERSION="${{ matrix.presta-versions }}"
          [[ "${PS_VERSION:0:3}" != '1.6' ]] && echo ::set-output name=filename::phpstan-PS-1.7.neon || echo ::set-output name=filename::phpstan-PS-1.6.neon

      - name: PHPStan PrestaShop ${{ matrix.presta-versions }}
        run: |
          PS_VERSION="${{ matrix.presta-versions }}" \
          NEON_FILE=${{steps.neon.outputs.filename}} \
          make phpstan


  phpunit:
    name: PHPUNIT
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: Cache vendor folder
        uses: actions/cache@v1
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}

      - name: Cache composer folder
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: php-composer-cache

      - name: Install dependencies
        run: composer install

#      - name: PHPUnit tests 1.7
#        run: |
#          PHPUNIT_PS_VERSION="1.7" make phpunit

      - name: PHPUnit tests nightly
        run: |
          PHPUNIT_PS_VERSION="nightly" make phpunit

  header-stamp:
    name: Check license headers
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache vendor folder
        uses: actions/cache@v1
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}

      - name: Cache composer folder
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: php-composer-cache

      - run: composer install

      - name: Run Header Stamp in Dry Run mode
        run: php vendor/bin/header-stamp --license=vendor/prestashop/header-stamp/assets/afl.txt --exclude=.github,node_modules,vendor,vendor,tests,_dev --dry-run

  upload_release_asset_production:
    name: Who GCP user is
    runs-on: ubuntu-latest
    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCLOUD_PROJECT_PRODUCTION }}
          service_account_key: ${{ secrets.G_CREDENTIAL_PRODUCTION }}
          export_default_credentials: true

      - name: Who GCP user is
        run: gcloud config list account --format "value(core.account)"
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.G_CREDENTIAL_PRODUCTION }}

      - name: Copy env files
        run: |
          gcloud components install beta
          gcloud beta secrets versions access latest --secret="accounts-module-config" > ps_accounts/ps_accounts/config/config.yml
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.G_CREDENTIAL_PRODUCTION }}
